
<?import javafx.scene.layout.BorderPane?>
<?import javafx.scene.control.TableView?>
<?import javafx.scene.control.TableColumn?>
<?import javafx.scene.control.cell.PropertyValueFactory?>
<BorderPane fx:controller="sample.Controller"
            xmlns:fx="http://javafx.com/fxml">
    <center>
        <TableView fx:id="contactsTable">
            <columns>
                <TableColumn text="First Name">
                    <cellValueFactory>
                        <PropertyValueFactory property="firstName"/>

                    </cellValueFactory>
                </TableColumn>
                <TableColumn text="Last Name">
                    <cellValueFactory>
                        <PropertyValueFactory property="lastName"/>
                    </cellValueFactory>
                </TableColumn>
                <TableColumn text="Phone Number">
                    <cellValueFactory>
                        <PropertyValueFactory property="phoneNumber"/>
                    </cellValueFactory>
                </TableColumn>
                <TableColumn text="Notes">
                    <cellValueFactory>
                        <PropertyValueFactory property="notes"/>
                    </cellValueFactory>
                </TableColumn>
            </columns>
        </TableView>
    </center>
</BorderPane>


<!--we are using cellValueFactory because we want data binding i.e. table should get updated as we add or delete the items-->
<!--PropertyValueFactory is used inside cellValueFactory especially in the case of TableView-->
<!--the property in the PropertyValueFactory must match the name in the Contact class-->